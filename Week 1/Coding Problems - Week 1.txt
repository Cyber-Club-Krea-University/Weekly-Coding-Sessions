WEEK 1 PROBLEMS (4/11/2023)
______________________________________________________________________________________________________________________________________________________


Problem 1: Increment a Large Integer


You are given a large integer represented as an integer array “digits”,  
where each digit [i] is the ith digit of the integer. 
The digits are ordered from most significant to least significant in left-to-right order. 
The large integer does not contain any leading 0's.
Increment the large integer by 1 and return the resulting array of digits.


Example 1:

Input: digits = [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.
Incrementing by one gives 123 + 1 = 124.
Thus, the result should be [1,2,4].


Example 2:

Input: digits = [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.
Incrementing by one gives 4321 + 1 = 4322.
Thus, the result should be [4,3,2,2].


Example 3:

Input: digits = [9]
Output: [1,0]
Explanation: The array represents the integer 9.
Incrementing by one gives 9 + 1 = 10.
Thus, the result should be [1,0].
 

Constraints:
1 <= digits.length <= 100
0 <= digits[i] <= 9
digits do not contain any leading 0's.


______________________________________________________________________________________________________________________________________________________


Problem 2: Anagram Check


An anagram is obtained by using all the letters of a sentence and 
reconstructing another meaningful sentence. Given two sentences, check if one is an anagram of the other.


For example, the following are anagrams of each other.

monasteries – amen stories
meal for one – for me alone
considerate – care is noted
astronomers – no more stars
signature – a true sign


Note that in the above examples, we ignore the spaces.


Input: Two strings
Output: True if they are anagrams; otherwise, output False.


______________________________________________________________________________________________________________________________________________________


Problem 3: Palindromic Squares


Palindromes are numbers that read the same forwards as backwards. 12321 is a typical palindrome.


Given a number base B (2 <= B <= 20 base 10), print all the integers N (1 <= N <= 300 base 10) 
such that the square of N is palindromic when expressed in base B.
Also, print the value of that palindromic square. 
Use the letters 'A', 'B', and so on to represent the digits 10, 11, and so on.

Print both the number and its square in base B.


Input Format : A single line with B, the base (specified in base 10).

Output Format : Lines with two integers represented in base B. 
		The first integer is the number whose square is palindromic 
		The second integer is the square itself. 
		Note that both integers are in base B.


Sample Input: 10

Sample Output:
1 1
2 4
3 9
11 121
22 484
26 676
101 10201
111 12321
121 14641
202 40804
212 44944
264 69696


______________________________________________________________________________________________________________________________________________________

